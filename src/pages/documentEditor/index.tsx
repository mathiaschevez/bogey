import { Button, Input } from "antd";
import { useSession } from "next-auth/react";
import Head from "next/head"
import { useState } from "react";
import { colors } from "~/styles/constants";
import { api } from "~/utils/api"

const DocumentEditor = () => {
  const { data: sessionData } = useSession()
  const saveArticle = api.article.saveArticle.useMutation()
  const publishArticle = api.article.publishArticle.useMutation()

  const [articleTitle, setArticleTitle] = useState('')
  const [textAreaValue, setTextAreaValue] = useState('')

  const handleSaveArticle = async () => {
    try {
      if (!sessionData || !sessionData?.user.id) return console.log('no session data')
          
      const res = await saveArticle.mutateAsync({
        userId: sessionData.user.id,
        title: articleTitle,
        content: textAreaValue
      })

      res === 'Error' ?
        console.log('error saving article') :
        console.log(res, 'successfully saved article') 
    } catch (error) {
      console.log(error)
    }
  }

  const handlePublishArticle = async () => {
    try {
      if (!sessionData || !sessionData?.user.id) return console.log('no session data')
            
      const res = await publishArticle.mutateAsync({
        userId: sessionData.user.id,
        title: articleTitle,
        content: textAreaValue
      })

      console.log(res, 'successfully created article')
    } catch (error) {
      console.log(error)
    }
  }

  return (
    <>
      <Head>
        <title>Bogey Blaine</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className='flex-1 flex items-center p-3'>
        <SidePanel />
        <div className={`flex flex-col flex-1 ml-40`}>
          <ContentCreation 
            articleTitle={articleTitle}
            setArticleTitle={setArticleTitle}
            textAreaValue={textAreaValue}
            setTextAreaValue={setTextAreaValue}
          />
          <SaveAndPublishButtons
            handleSaveArticle={handleSaveArticle}
            handlePublishArticle={handlePublishArticle}
          />
        </div>
      </div>
    </>
  );
}

export default DocumentEditor

const SidePanel = () => {
  return (
    <div className='fixed flex w-32 border border-r-black'>
      here
    </div>
  )
}

const ContentCreation = ({ articleTitle, textAreaValue, setArticleTitle, setTextAreaValue }: { articleTitle: string, setArticleTitle: (_: string) => void, textAreaValue: string, setTextAreaValue: (_:string) => void }) => {
  return (
    <div>
      <div className='items-center flex justify-center cursor-pointer border-2 border-black font-bold text-xl w-[80%] h-48 mb-6'>
        Image +
      </div>
      <Input
        size='large'
        className='mx-auto w-[80%] mb-6'
        placeholder='The Title for this Article'
        value={articleTitle}
        onChange={(e) => setArticleTitle(e.target.value)}
      />
      <Input.TextArea 
        className='mx-auto w-[80%]'
        value={textAreaValue}
        onChange={(e) => setTextAreaValue(e.target.value)}
        autoSize={{ minRows: 10, maxRows: 20 }}
      />
    </div>
  )
}

const SaveAndPublishButtons = ({ handleSaveArticle, handlePublishArticle }: { handleSaveArticle: () => Promise<void>, handlePublishArticle: () => Promise<void> }) => {
  return (
    <div className='flex gap-6 mt-9'>
      <Button
        size='large'
        className={`border-black hover:bg-black hover:text-white`}
        onClick={handleSaveArticle as () => void}
      >Save Article</Button>
      <Button
        size='large'
        style={{ background: colors.black}}
        className={`text-white`}
        onClick={handlePublishArticle as () => void}
      >Publish Article</Button>
    </div>
  )
}
